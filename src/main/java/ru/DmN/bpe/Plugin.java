package ru.DmN.bpe;

import org.objectweb.asm.Handle;
import org.objectweb.asm.Label;
import org.objectweb.asm.Opcodes;
import org.objectweb.asm.Type;
import org.objectweb.asm.tree.ClassNode;
import org.spongepowered.asm.mixin.extensibility.IMixinConfigPlugin;
import org.spongepowered.asm.mixin.extensibility.IMixinInfo;

import java.util.List;
import java.util.Set;

import static org.objectweb.asm.Opcodes.*;

public class Plugin implements IMixinConfigPlugin {
    @Override
    public void onLoad(String mixinPackage) {

    }

    @Override
    public String getRefMapperConfig() {
        return null;
    }

    @Override
    public boolean shouldApplyMixin(String targetClassName, String mixinClassName) {
        return true;
    }

    @Override
    public void acceptTargets(Set<String> myTargets, Set<String> otherTargets) {

    }

    @Override
    public List<String> getMixins() {
        return null;
    }

    @Override
    public void preApply(String targetClassName, ClassNode node, String mixinClassName, IMixinInfo mixinInfo) {

    }

    @Override
    public void postApply(String targetClassName, ClassNode node, String mixinClassName, IMixinInfo mixinInfo) {
        if (targetClassName.equals("net.minecraft.world.chunk.light.LightStorage")) {
//            Utils.replaceField(node, "queuedSections", "Ljava/util/Map;", "Ljava/util/Map<Lnet/minecraft/util/math/Vec3i;Lnet/minecraft/world/chunk/ChunkNibbleArray;>;");
            Utils.removeField(node, "queuedSections");
//            Utils.replaceField(node, "queuedEdgeSections", "Ljava/util/Set;", "Ljava/util/Set<Lnet/minecraft/util/math/Vec3i;>;");
            Utils.removeField(node, "queuedEdgeSections");
            Utils.removeMethod(node, "getLightSection", "(J)Lnet/minecraft/world/chunk/ChunkNibbleArray;");
            Utils.removeMethod(node, "getLightSection", "(JZ)Lnet/minecraft/world/chunk/ChunkNibbleArray;");

            {
                var methodVisitor = Utils.replaceMethod(node, "<init>", "(Lnet/minecraft/world/LightType;Lnet/minecraft/world/chunk/ChunkProvider;Lnet/minecraft/world/chunk/ChunkToNibbleArrayMap;)V");
                methodVisitor.visitParameter("lightType", 0);
                methodVisitor.visitParameter("chunkProvider", 0);
                methodVisitor.visitParameter("lightData", 0);
                methodVisitor.visitCode();
                Label label0 = new Label();
                methodVisitor.visitLabel(label0);
                methodVisitor.visitLineNumber(56, label0);
                methodVisitor.visitVarInsn(ALOAD, 0);
                methodVisitor.visitInsn(ICONST_3);
                methodVisitor.visitIntInsn(BIPUSH, 16);
                methodVisitor.visitIntInsn(SIPUSH, 256);
                methodVisitor.visitMethodInsn(INVOKESPECIAL, "net/minecraft/world/SectionDistanceLevelPropagator", "<init>", "(III)V", false);
                Label label1 = new Label();
                methodVisitor.visitLabel(label1);
                methodVisitor.visitLineNumber(56, label1);
                methodVisitor.visitVarInsn(ALOAD, 0);
                methodVisitor.visitTypeInsn(NEW, "it/unimi/dsi/fastutil/longs/LongOpenHashSet");
                methodVisitor.visitInsn(DUP);
                methodVisitor.visitMethodInsn(INVOKESPECIAL, "it/unimi/dsi/fastutil/longs/LongOpenHashSet", "<init>", "()V", false);
                methodVisitor.visitFieldInsn(PUTFIELD, "net/minecraft/world/chunk/light/LightStorage", "readySections", "Lit/unimi/dsi/fastutil/longs/LongSet;");
                Label label2 = new Label();
                methodVisitor.visitLabel(label2);
                methodVisitor.visitLineNumber(56, label2);
                methodVisitor.visitVarInsn(ALOAD, 0);
                methodVisitor.visitTypeInsn(NEW, "it/unimi/dsi/fastutil/longs/LongOpenHashSet");
                methodVisitor.visitInsn(DUP);
                methodVisitor.visitMethodInsn(INVOKESPECIAL, "it/unimi/dsi/fastutil/longs/LongOpenHashSet", "<init>", "()V", false);
                methodVisitor.visitFieldInsn(PUTFIELD, "net/minecraft/world/chunk/light/LightStorage", "markedNotReadySections", "Lit/unimi/dsi/fastutil/longs/LongSet;");
                Label label3 = new Label();
                methodVisitor.visitLabel(label3);
                methodVisitor.visitLineNumber(56, label3);
                methodVisitor.visitVarInsn(ALOAD, 0);
                methodVisitor.visitTypeInsn(NEW, "it/unimi/dsi/fastutil/longs/LongOpenHashSet");
                methodVisitor.visitInsn(DUP);
                methodVisitor.visitMethodInsn(INVOKESPECIAL, "it/unimi/dsi/fastutil/longs/LongOpenHashSet", "<init>", "()V", false);
                methodVisitor.visitFieldInsn(PUTFIELD, "net/minecraft/world/chunk/light/LightStorage", "markedReadySections", "Lit/unimi/dsi/fastutil/longs/LongSet;");
                Label label4 = new Label();
                methodVisitor.visitLabel(label4);
                methodVisitor.visitLineNumber(56, label4);
                methodVisitor.visitVarInsn(ALOAD, 0);
                methodVisitor.visitTypeInsn(NEW, "it/unimi/dsi/fastutil/longs/LongOpenHashSet");
                methodVisitor.visitInsn(DUP);
                methodVisitor.visitMethodInsn(INVOKESPECIAL, "it/unimi/dsi/fastutil/longs/LongOpenHashSet", "<init>", "()V", false);
                methodVisitor.visitFieldInsn(PUTFIELD, "net/minecraft/world/chunk/light/LightStorage", "dirtySections", "Lit/unimi/dsi/fastutil/longs/LongSet;");
                Label label5 = new Label();
                methodVisitor.visitLabel(label5);
                methodVisitor.visitLineNumber(56, label5);
                methodVisitor.visitVarInsn(ALOAD, 0);
                methodVisitor.visitTypeInsn(NEW, "it/unimi/dsi/fastutil/longs/LongOpenHashSet");
                methodVisitor.visitInsn(DUP);
                methodVisitor.visitMethodInsn(INVOKESPECIAL, "it/unimi/dsi/fastutil/longs/LongOpenHashSet", "<init>", "()V", false);
                methodVisitor.visitFieldInsn(PUTFIELD, "net/minecraft/world/chunk/light/LightStorage", "notifySections", "Lit/unimi/dsi/fastutil/longs/LongSet;");
                Label label6 = new Label();
                methodVisitor.visitLabel(label6);
                methodVisitor.visitLineNumber(5, label6);
                methodVisitor.visitVarInsn(ALOAD, 0);
                methodVisitor.visitTypeInsn(NEW, "java/util/HashMap");
                methodVisitor.visitInsn(DUP);
                methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/util/HashMap", "<init>", "()V", false);
                methodVisitor.visitFieldInsn(PUTFIELD, "net/minecraft/world/chunk/light/LightStorage", "queuedSections", "Ljava/util/Map;");
                Label label7 = new Label();
                methodVisitor.visitLabel(label7);
                methodVisitor.visitLineNumber(5, label7);
                methodVisitor.visitVarInsn(ALOAD, 0);
                methodVisitor.visitTypeInsn(NEW, "java/util/HashSet");
                methodVisitor.visitInsn(DUP);
                methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/util/HashSet", "<init>", "()V", false);
                methodVisitor.visitFieldInsn(PUTFIELD, "net/minecraft/world/chunk/light/LightStorage", "queuedEdgeSections", "Ljava/util/Set;");
                Label label8 = new Label();
                methodVisitor.visitLabel(label8);
                methodVisitor.visitLineNumber(56, label8);
                methodVisitor.visitVarInsn(ALOAD, 0);
                methodVisitor.visitTypeInsn(NEW, "it/unimi/dsi/fastutil/longs/LongOpenHashSet");
                methodVisitor.visitInsn(DUP);
                methodVisitor.visitMethodInsn(INVOKESPECIAL, "it/unimi/dsi/fastutil/longs/LongOpenHashSet", "<init>", "()V", false);
                methodVisitor.visitFieldInsn(PUTFIELD, "net/minecraft/world/chunk/light/LightStorage", "columnsToRetain", "Lit/unimi/dsi/fastutil/longs/LongSet;");
                Label label9 = new Label();
                methodVisitor.visitLabel(label9);
                methodVisitor.visitLineNumber(56, label9);
                methodVisitor.visitVarInsn(ALOAD, 0);
                methodVisitor.visitTypeInsn(NEW, "it/unimi/dsi/fastutil/longs/LongOpenHashSet");
                methodVisitor.visitInsn(DUP);
                methodVisitor.visitMethodInsn(INVOKESPECIAL, "it/unimi/dsi/fastutil/longs/LongOpenHashSet", "<init>", "()V", false);
                methodVisitor.visitFieldInsn(PUTFIELD, "net/minecraft/world/chunk/light/LightStorage", "sectionsToRemove", "Lit/unimi/dsi/fastutil/longs/LongSet;");
                Label label10 = new Label();
                methodVisitor.visitLabel(label10);
                methodVisitor.visitLineNumber(57, label10);
                methodVisitor.visitVarInsn(ALOAD, 0);
                methodVisitor.visitVarInsn(ALOAD, 1);
                methodVisitor.visitFieldInsn(PUTFIELD, "net/minecraft/world/chunk/light/LightStorage", "lightType", "Lnet/minecraft/world/LightType;");
                Label label11 = new Label();
                methodVisitor.visitLabel(label11);
                methodVisitor.visitLineNumber(58, label11);
                methodVisitor.visitVarInsn(ALOAD, 0);
                methodVisitor.visitVarInsn(ALOAD, 2);
                methodVisitor.visitFieldInsn(PUTFIELD, "net/minecraft/world/chunk/light/LightStorage", "chunkProvider", "Lnet/minecraft/world/chunk/ChunkProvider;");
                Label label12 = new Label();
                methodVisitor.visitLabel(label12);
                methodVisitor.visitLineNumber(59, label12);
                methodVisitor.visitVarInsn(ALOAD, 0);
                methodVisitor.visitVarInsn(ALOAD, 3);
                methodVisitor.visitFieldInsn(PUTFIELD, "net/minecraft/world/chunk/light/LightStorage", "storage", "Lnet/minecraft/world/chunk/ChunkToNibbleArrayMap;");
                Label label13 = new Label();
                methodVisitor.visitLabel(label13);
                methodVisitor.visitLineNumber(60, label13);
                methodVisitor.visitVarInsn(ALOAD, 0);
                methodVisitor.visitVarInsn(ALOAD, 3);
                methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/chunk/ChunkToNibbleArrayMap", "copy", "()Lnet/minecraft/world/chunk/ChunkToNibbleArrayMap;", false);
                methodVisitor.visitFieldInsn(PUTFIELD, "net/minecraft/world/chunk/light/LightStorage", "uncachedStorage", "Lnet/minecraft/world/chunk/ChunkToNibbleArrayMap;");
                Label label14 = new Label();
                methodVisitor.visitLabel(label14);
                methodVisitor.visitLineNumber(61, label14);
                methodVisitor.visitVarInsn(ALOAD, 0);
                methodVisitor.visitFieldInsn(GETFIELD, "net/minecraft/world/chunk/light/LightStorage", "uncachedStorage", "Lnet/minecraft/world/chunk/ChunkToNibbleArrayMap;");
                methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/chunk/ChunkToNibbleArrayMap", "disableCache", "()V", false);
                Label label15 = new Label();
                methodVisitor.visitLabel(label15);
                methodVisitor.visitLineNumber(65, label15);
                methodVisitor.visitInsn(RETURN);
                Label label16 = new Label();
                methodVisitor.visitLabel(label16);
                methodVisitor.visitLocalVariable("this", "Lnet/minecraft/world/chunk/light/LightStorage;", "Lnet/minecraft/world/chunk/light/LightStorage<TM;>;", label0, label16, 0);
                methodVisitor.visitLocalVariable("lightType", "Lnet/minecraft/world/LightType;", null, label0, label16, 1);
                methodVisitor.visitLocalVariable("chunkProvider", "Lnet/minecraft/world/chunk/ChunkProvider;", null, label0, label16, 2);
                methodVisitor.visitLocalVariable("lightData", "Lnet/minecraft/world/chunk/ChunkToNibbleArrayMap;", "TM;", label0, label16, 3);
                methodVisitor.visitMaxs(4, 4);
                methodVisitor.visitEnd();
            }
        } else if (targetClassName.equals("net.minecraft.world.chunk.light.LevelPropagator")) {
//            Utils.replaceField(node, "pendingUpdates", "Lru/DmN/bpe/rapi/DefaultHashMap;", "Lru/DmN/bpe/rapi/DefaultHashMap<Lnet/minecraft/util/math/Vec3i;B>;");
            Utils.removeField(node, "pendingUpdates");
//            Utils.replaceField(node, "pendingIdUpdatesByLevel", "[Ljava/util/Set;", "[Lnet/minecraft/util/math/Vec3i;>;");
            Utils.removeField(node, "pendingIdUpdatesByLevel");
            Utils.removeMethod(node, "resetLevel", "(J)V");
            Utils.removeMethod(node, "updateLevel", "(JIZ)V");
            Utils.removeMethod(node, "updateLevel", "(JJIZ)V");
            Utils.removeMethod(node, "updateLevel", "(JJIIZ)V");
            Utils.removeMethod(node, "addPendingUpdate", "(JII)V");
            Utils.removeMethod(node, "removePendingUpdate", "(J)V");
            Utils.removeMethod(node, "removePendingUpdate", "(JIIZ)V");

            {
                var methodVisitor = Utils.replaceMethod(node, "<init>", "(III)V");
                methodVisitor.visitCode();
                Label label0 = new Label();
                methodVisitor.visitLabel(label0);
                methodVisitor.visitLineNumber(14, label0);
                methodVisitor.visitVarInsn(ALOAD, 0);
                methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/lang/Object", "<init>", "()V", false);
                Label label1 = new Label();
                methodVisitor.visitLabel(label1);
                methodVisitor.visitLineNumber(15, label1);
                methodVisitor.visitVarInsn(ILOAD, 1);
                methodVisitor.visitIntInsn(SIPUSH, 254);
                Label label2 = new Label();
                methodVisitor.visitJumpInsn(IF_ICMPLT, label2);
                Label label3 = new Label();
                methodVisitor.visitLabel(label3);
                methodVisitor.visitLineNumber(16, label3);
                methodVisitor.visitTypeInsn(NEW, "java/lang/IllegalArgumentException");
                methodVisitor.visitInsn(DUP);
                methodVisitor.visitLdcInsn("Level count must be < 254.");
                methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/lang/IllegalArgumentException", "<init>", "(Ljava/lang/String;)V", false);
                methodVisitor.visitInsn(ATHROW);
                methodVisitor.visitLabel(label2);
                methodVisitor.visitLineNumber(18, label2);
                methodVisitor.visitFrame(Opcodes.F_FULL, 4, new Object[]{"net/minecraft/world/chunk/light/LevelPropagator", Opcodes.INTEGER, Opcodes.INTEGER, Opcodes.INTEGER}, 0, new Object[]{});
                methodVisitor.visitVarInsn(ALOAD, 0);
                methodVisitor.visitVarInsn(ILOAD, 1);
                methodVisitor.visitFieldInsn(PUTFIELD, "net/minecraft/world/chunk/light/LevelPropagator", "levelCount", "I");
                Label label4 = new Label();
                methodVisitor.visitLabel(label4);
                methodVisitor.visitLineNumber(19, label4);
                methodVisitor.visitVarInsn(ALOAD, 0);
                methodVisitor.visitVarInsn(ILOAD, 1);
                methodVisitor.visitTypeInsn(ANEWARRAY, "java/util/Set");
                methodVisitor.visitFieldInsn(PUTFIELD, "net/minecraft/world/chunk/light/LevelPropagator", "pendingIdUpdatesByLevel", "[Ljava/util/Set;");
                Label label5 = new Label();
                methodVisitor.visitLabel(label5);
                methodVisitor.visitLineNumber(21, label5);
                methodVisitor.visitInsn(ICONST_0);
                methodVisitor.visitVarInsn(ISTORE, 4);
                Label label6 = new Label();
                methodVisitor.visitLabel(label6);
                methodVisitor.visitFrame(Opcodes.F_APPEND, 1, new Object[]{Opcodes.INTEGER}, 0, null);
                methodVisitor.visitVarInsn(ILOAD, 4);
                methodVisitor.visitVarInsn(ILOAD, 1);
                Label label7 = new Label();
                methodVisitor.visitJumpInsn(IF_ICMPGE, label7);
                Label label8 = new Label();
                methodVisitor.visitLabel(label8);
                methodVisitor.visitLineNumber(22, label8);
                methodVisitor.visitVarInsn(ALOAD, 0);
                methodVisitor.visitFieldInsn(GETFIELD, "net/minecraft/world/chunk/light/LevelPropagator", "pendingIdUpdatesByLevel", "[Ljava/util/Set;");
                methodVisitor.visitVarInsn(ILOAD, 4);
                methodVisitor.visitTypeInsn(NEW, "java/util/HashSet");
                methodVisitor.visitInsn(DUP);
                methodVisitor.visitVarInsn(ILOAD, 2);
                methodVisitor.visitLdcInsn(new Float("0.5"));
                methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/util/HashSet", "<init>", "(IF)V", false);
                methodVisitor.visitInsn(AASTORE);
                Label label9 = new Label();
                methodVisitor.visitLabel(label9);
                methodVisitor.visitLineNumber(21, label9);
                methodVisitor.visitIincInsn(4, 1);
                methodVisitor.visitJumpInsn(GOTO, label6);
                methodVisitor.visitLabel(label7);
                methodVisitor.visitLineNumber(25, label7);
                methodVisitor.visitFrame(Opcodes.F_CHOP, 1, null, 0, null);
                methodVisitor.visitVarInsn(ALOAD, 0);
                methodVisitor.visitTypeInsn(NEW, "ru/DmN/bpe/rapi/DefaultHashMap");
                methodVisitor.visitInsn(DUP);
                methodVisitor.visitVarInsn(ILOAD, 3);
                methodVisitor.visitLdcInsn(new Float("0.5"));
                methodVisitor.visitMethodInsn(INVOKESPECIAL, "ru/DmN/bpe/rapi/DefaultHashMap", "<init>", "(IF)V", false);
                methodVisitor.visitFieldInsn(PUTFIELD, "net/minecraft/world/chunk/light/LevelPropagator", "pendingUpdates", "Lru/DmN/bpe/rapi/DefaultHashMap;");
                Label label10 = new Label();
                methodVisitor.visitLabel(label10);
                methodVisitor.visitLineNumber(26, label10);
                methodVisitor.visitVarInsn(ALOAD, 0);
                methodVisitor.visitFieldInsn(GETFIELD, "net/minecraft/world/chunk/light/LevelPropagator", "pendingUpdates", "Lru/DmN/bpe/rapi/DefaultHashMap;");
                methodVisitor.visitInsn(ICONST_M1);
                methodVisitor.visitMethodInsn(INVOKESTATIC, "java/lang/Integer", "valueOf", "(I)Ljava/lang/Integer;", false);
                methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "ru/DmN/bpe/rapi/DefaultHashMap", "defaultReturnValue", "(Ljava/lang/Object;)V", false);
                Label label11 = new Label();
                methodVisitor.visitLabel(label11);
                methodVisitor.visitLineNumber(27, label11);
                methodVisitor.visitVarInsn(ALOAD, 0);
                methodVisitor.visitVarInsn(ILOAD, 1);
                methodVisitor.visitFieldInsn(PUTFIELD, "net/minecraft/world/chunk/light/LevelPropagator", "minPendingLevel", "I");
                Label label12 = new Label();
                methodVisitor.visitLabel(label12);
                methodVisitor.visitLineNumber(29, label12);
                methodVisitor.visitInsn(RETURN);
                Label label13 = new Label();
                methodVisitor.visitLabel(label13);
                methodVisitor.visitLocalVariable("i", "I", null, label6, label7, 4);
                methodVisitor.visitLocalVariable("this", "Lnet/minecraft/world/chunk/light/LevelPropagator;", null, label0, label13, 0);
                methodVisitor.visitLocalVariable("levelCount", "I", null, label0, label13, 1);
                methodVisitor.visitLocalVariable("expectedLevelSize", "I", null, label0, label13, 2);
                methodVisitor.visitLocalVariable("expectedTotalSize", "I", null, label0, label13, 3);
                methodVisitor.visitMaxs(6, 5);
                methodVisitor.visitEnd();
            }
        } else if (targetClassName.equals("net.minecraft.server.world.ChunkTicketManager")) {
            Utils.removeField(node, "playersByChunkPos");
            Utils.removeField(node, "ticketsByPosition");
            Utils.removeField(node, "chunkPositions");
            Utils.removeMethod(node, "addTicket", "(JLnet/minecraft/server/world/ChunkTicket;)V");
            Utils.removeMethod(node, "addTicket", "(Lnet/minecraft/server/world/ChunkTicketType;Lnet/minecraft/util/math/ChunkPos;ILjava/lang/Object;)V");
            Utils.removeMethod(node, "isUnloaded", "(J)Z");

            {
                var methodVisitor = Utils.replaceMethod(node, "<init>", "(Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)V");
                methodVisitor.visitCode();
                Label label0 = new Label();
                methodVisitor.visitLabel(label0);
                methodVisitor.visitLineNumber(33, label0);
                methodVisitor.visitVarInsn(ALOAD, 0);
                methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/lang/Object", "<init>", "()V", false);
                Label label1 = new Label();
                methodVisitor.visitLabel(label1);
                methodVisitor.visitLineNumber(18, label1);
                methodVisitor.visitVarInsn(ALOAD, 0);
                methodVisitor.visitTypeInsn(NEW, "java/util/HashMap");
                methodVisitor.visitInsn(DUP);
                methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/util/HashMap", "<init>", "()V", false);
                methodVisitor.visitFieldInsn(PUTFIELD, "net/minecraft/server/world/ChunkTicketManager", "playersByChunkPos", "Ljava/util/Map;");
                Label label2 = new Label();
                methodVisitor.visitLabel(label2);
                methodVisitor.visitLineNumber(19, label2);
                methodVisitor.visitVarInsn(ALOAD, 0);
                methodVisitor.visitTypeInsn(NEW, "java/util/HashMap");
                methodVisitor.visitInsn(DUP);
                methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/util/HashMap", "<init>", "()V", false);
                methodVisitor.visitFieldInsn(PUTFIELD, "net/minecraft/server/world/ChunkTicketManager", "ticketsByPosition", "Ljava/util/Map;");
                Label label3 = new Label();
                methodVisitor.visitLabel(label3);
                methodVisitor.visitLineNumber(34, label3);
                methodVisitor.visitVarInsn(ALOAD, 2);
                methodVisitor.visitMethodInsn(INVOKESTATIC, "java/util/Objects", "requireNonNull", "(Ljava/lang/Object;)Ljava/lang/Object;", false);
                methodVisitor.visitInsn(POP);
                Label label4 = new Label();
                methodVisitor.visitLabel(label4);
                methodVisitor.visitLineNumber(35, label4);
                methodVisitor.visitLdcInsn("player ticket throttler");
                methodVisitor.visitVarInsn(ALOAD, 2);
                methodVisitor.visitInsn(DUP);
                methodVisitor.visitMethodInsn(INVOKESTATIC, "java/util/Objects", "requireNonNull", "(Ljava/lang/Object;)Ljava/lang/Object;", false);
                methodVisitor.visitInsn(POP);
                methodVisitor.visitInvokeDynamicInsn("accept", "(Ljava/util/concurrent/Executor;)Ljava/util/function/Consumer;", new Handle(Opcodes.H_INVOKESTATIC, "java/lang/invoke/LambdaMetafactory", "metafactory", "(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;", false), new Object[]{Type.getType("(Ljava/lang/Object;)V"), new Handle(Opcodes.H_INVOKEINTERFACE, "java/util/concurrent/Executor", "execute", "(Ljava/lang/Runnable;)V", true), Type.getType("(Ljava/lang/Runnable;)V")});
                methodVisitor.visitMethodInsn(INVOKESTATIC, "net/minecraft/util/thread/MessageListener", "create", "(Ljava/lang/String;Ljava/util/function/Consumer;)Lnet/minecraft/util/thread/MessageListener;", true);
                methodVisitor.visitVarInsn(ASTORE, 3);
                Label label5 = new Label();
                methodVisitor.visitLabel(label5);
                methodVisitor.visitLineNumber(36, label5);
                methodVisitor.visitTypeInsn(NEW, "net/minecraft/server/world/ChunkTaskPrioritySystem");
                methodVisitor.visitInsn(DUP);
                methodVisitor.visitVarInsn(ALOAD, 3);
                methodVisitor.visitMethodInsn(INVOKESTATIC, "com/google/common/collect/ImmutableList", "of", "(Ljava/lang/Object;)Lcom/google/common/collect/ImmutableList;", false);
                methodVisitor.visitVarInsn(ALOAD, 1);
                methodVisitor.visitInsn(ICONST_4);
                methodVisitor.visitMethodInsn(INVOKESPECIAL, "net/minecraft/server/world/ChunkTaskPrioritySystem", "<init>", "(Ljava/util/List;Ljava/util/concurrent/Executor;I)V", false);
                methodVisitor.visitVarInsn(ASTORE, 4);
                Label label6 = new Label();
                methodVisitor.visitLabel(label6);
                methodVisitor.visitLineNumber(37, label6);
                methodVisitor.visitVarInsn(ALOAD, 0);
                methodVisitor.visitVarInsn(ALOAD, 4);
                methodVisitor.visitFieldInsn(PUTFIELD, "net/minecraft/server/world/ChunkTicketManager", "levelUpdateListener", "Lnet/minecraft/server/world/ChunkTaskPrioritySystem;");
                Label label7 = new Label();
                methodVisitor.visitLabel(label7);
                methodVisitor.visitLineNumber(38, label7);
                methodVisitor.visitVarInsn(ALOAD, 0);
                methodVisitor.visitVarInsn(ALOAD, 4);
                methodVisitor.visitVarInsn(ALOAD, 3);
                methodVisitor.visitInsn(ICONST_1);
                methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/server/world/ChunkTaskPrioritySystem", "createExecutor", "(Lnet/minecraft/util/thread/MessageListener;Z)Lnet/minecraft/util/thread/MessageListener;", false);
                methodVisitor.visitFieldInsn(PUTFIELD, "net/minecraft/server/world/ChunkTicketManager", "playerTicketThrottler", "Lnet/minecraft/util/thread/MessageListener;");
                Label label8 = new Label();
                methodVisitor.visitLabel(label8);
                methodVisitor.visitLineNumber(39, label8);
                methodVisitor.visitVarInsn(ALOAD, 0);
                methodVisitor.visitVarInsn(ALOAD, 4);
                methodVisitor.visitVarInsn(ALOAD, 3);
                methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/server/world/ChunkTaskPrioritySystem", "createUnblockingExecutor", "(Lnet/minecraft/util/thread/MessageListener;)Lnet/minecraft/util/thread/MessageListener;", false);
                methodVisitor.visitFieldInsn(PUTFIELD, "net/minecraft/server/world/ChunkTicketManager", "playerTicketThrottlerUnblocker", "Lnet/minecraft/util/thread/MessageListener;");
                Label label9 = new Label();
                methodVisitor.visitLabel(label9);
                methodVisitor.visitLineNumber(40, label9);
                methodVisitor.visitVarInsn(ALOAD, 0);
                methodVisitor.visitVarInsn(ALOAD, 2);
                methodVisitor.visitFieldInsn(PUTFIELD, "net/minecraft/server/world/ChunkTicketManager", "mainThreadExecutor", "Ljava/util/concurrent/Executor;");
                Label label10 = new Label();
                methodVisitor.visitLabel(label10);
                methodVisitor.visitLineNumber(41, label10);
                methodVisitor.visitVarInsn(ALOAD, 0);
                methodVisitor.visitTypeInsn(NEW, "net/minecraft/server/world/ChunkTicketManager$TicketDistanceLevelPropagator");
                methodVisitor.visitInsn(DUP);
                methodVisitor.visitVarInsn(ALOAD, 0);
                methodVisitor.visitMethodInsn(INVOKESPECIAL, "net/minecraft/server/world/ChunkTicketManager$TicketDistanceLevelPropagator", "<init>", "(Lnet/minecraft/server/world/ChunkTicketManager;)V", false);
                methodVisitor.visitFieldInsn(PUTFIELD, "net/minecraft/server/world/ChunkTicketManager", "distanceFromTicketTracker", "Lnet/minecraft/server/world/ChunkTicketManager$TicketDistanceLevelPropagator;");
                Label label11 = new Label();
                methodVisitor.visitLabel(label11);
                methodVisitor.visitLineNumber(42, label11);
                methodVisitor.visitVarInsn(ALOAD, 0);
                methodVisitor.visitTypeInsn(NEW, "net/minecraft/server/world/ChunkTicketManager$DistanceFromNearestPlayerTracker");
                methodVisitor.visitInsn(DUP);
                methodVisitor.visitVarInsn(ALOAD, 0);
                methodVisitor.visitIntInsn(BIPUSH, 8);
                methodVisitor.visitMethodInsn(INVOKESPECIAL, "net/minecraft/server/world/ChunkTicketManager$DistanceFromNearestPlayerTracker", "<init>", "(Lnet/minecraft/server/world/ChunkTicketManager;I)V", false);
                methodVisitor.visitFieldInsn(PUTFIELD, "net/minecraft/server/world/ChunkTicketManager", "distanceFromNearestPlayerTracker", "Lnet/minecraft/server/world/ChunkTicketManager$DistanceFromNearestPlayerTracker;");
                Label label12 = new Label();
                methodVisitor.visitLabel(label12);
                methodVisitor.visitLineNumber(43, label12);
                methodVisitor.visitVarInsn(ALOAD, 0);
                methodVisitor.visitTypeInsn(NEW, "net/minecraft/world/SimulationDistanceLevelPropagator");
                methodVisitor.visitInsn(DUP);
                methodVisitor.visitMethodInsn(INVOKESPECIAL, "net/minecraft/world/SimulationDistanceLevelPropagator", "<init>", "()V", false);
                methodVisitor.visitFieldInsn(PUTFIELD, "net/minecraft/server/world/ChunkTicketManager", "simulationDistanceTracker", "Lnet/minecraft/world/SimulationDistanceLevelPropagator;");
                Label label13 = new Label();
                methodVisitor.visitLabel(label13);
                methodVisitor.visitLineNumber(44, label13);
                methodVisitor.visitVarInsn(ALOAD, 0);
                methodVisitor.visitTypeInsn(NEW, "net/minecraft/server/world/ChunkTicketManager$NearbyChunkTicketUpdater");
                methodVisitor.visitInsn(DUP);
                methodVisitor.visitVarInsn(ALOAD, 0);
                methodVisitor.visitIntInsn(BIPUSH, 33);
                methodVisitor.visitMethodInsn(INVOKESPECIAL, "net/minecraft/server/world/ChunkTicketManager$NearbyChunkTicketUpdater", "<init>", "(Lnet/minecraft/server/world/ChunkTicketManager;I)V", false);
                methodVisitor.visitFieldInsn(PUTFIELD, "net/minecraft/server/world/ChunkTicketManager", "nearbyChunkTicketUpdater", "Lnet/minecraft/server/world/ChunkTicketManager$NearbyChunkTicketUpdater;");
                Label label14 = new Label();
                methodVisitor.visitLabel(label14);
                methodVisitor.visitLineNumber(45, label14);
                methodVisitor.visitVarInsn(ALOAD, 0);
                methodVisitor.visitTypeInsn(NEW, "java/util/HashSet");
                methodVisitor.visitInsn(DUP);
                methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/util/HashSet", "<init>", "()V", false);
                methodVisitor.visitFieldInsn(PUTFIELD, "net/minecraft/server/world/ChunkTicketManager", "chunkHolders", "Ljava/util/Set;");
                Label label15 = new Label();
                methodVisitor.visitLabel(label15);
                methodVisitor.visitLineNumber(46, label15);
                methodVisitor.visitVarInsn(ALOAD, 0);
                methodVisitor.visitTypeInsn(NEW, "java/util/HashSet");
                methodVisitor.visitInsn(DUP);
                methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/util/HashSet", "<init>", "()V", false);
                methodVisitor.visitFieldInsn(PUTFIELD, "net/minecraft/server/world/ChunkTicketManager", "chunkPositions", "Ljava/util/Set;");
                Label label16 = new Label();
                methodVisitor.visitLabel(label16);
                methodVisitor.visitLineNumber(47, label16);
                methodVisitor.visitVarInsn(ALOAD, 0);
                methodVisitor.visitIntInsn(BIPUSH, 10);
                methodVisitor.visitFieldInsn(PUTFIELD, "net/minecraft/server/world/ChunkTicketManager", "simulationDistance", "I");
                Label label17 = new Label();
                methodVisitor.visitLabel(label17);
                methodVisitor.visitLineNumber(48, label17);
                methodVisitor.visitInsn(RETURN);
                Label label18 = new Label();
                methodVisitor.visitLabel(label18);
                methodVisitor.visitLocalVariable("this", "Lnet/minecraft/server/world/ChunkTicketManager;", null, label0, label18, 0);
                methodVisitor.visitLocalVariable("workerExecutor", "Ljava/util/concurrent/Executor;", null, label0, label18, 1);
                methodVisitor.visitLocalVariable("mainThreadExecutor", "Ljava/util/concurrent/Executor;", null, label0, label18, 2);
                methodVisitor.visitLocalVariable("messageListener", "Lnet/minecraft/util/thread/MessageListener;", "Lnet/minecraft/util/thread/MessageListener<Ljava/lang/Runnable;>;", label5, label18, 3);
                methodVisitor.visitLocalVariable("chunkTaskPrioritySystem", "Lnet/minecraft/server/world/ChunkTaskPrioritySystem;", null, label6, label18, 4);
                methodVisitor.visitMaxs(5, 5);
                methodVisitor.visitEnd();
            }
        } else if (mixinClassName.equals("ru.DmN.bpe.mixin.UnblockingMessageMixin")) {
            Utils.replaceField(node, "pos", "Ljava/util/Map<Lnet/minecraft/util/math/Vec3i;", null);
            Utils.removeMethod(node, "<init>", "(Ljava/lang/Runnable;JZ)V");

            {
                var methodVisitor = node.visitMethod(ACC_PUBLIC, "<init>", "(Ljava/lang/Runnable;Lnet/minecraft/util/math/Vec3i;Z)V", null, null);
                methodVisitor.visitCode();
                Label label0 = new Label();
                methodVisitor.visitLabel(label0);
                methodVisitor.visitLineNumber(10, label0);
                methodVisitor.visitVarInsn(ALOAD, 0);
                methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/lang/Object", "<init>", "()V", false);
                Label label1 = new Label();
                methodVisitor.visitLabel(label1);
                methodVisitor.visitLineNumber(11, label1);
                methodVisitor.visitVarInsn(ALOAD, 0);
                methodVisitor.visitVarInsn(ALOAD, 1);
                methodVisitor.visitFieldInsn(PUTFIELD, "net/minecraft/server/world/ChunkTaskPrioritySystem$UnblockingMessage", "callback", "Ljava/lang/Runnable;");
                Label label2 = new Label();
                methodVisitor.visitLabel(label2);
                methodVisitor.visitLineNumber(12, label2);
                methodVisitor.visitVarInsn(ALOAD, 0);
                methodVisitor.visitVarInsn(ALOAD, 2);
                methodVisitor.visitFieldInsn(PUTFIELD, "net/minecraft/server/world/ChunkTaskPrioritySystem$UnblockingMessage", "pos", "Lnet/minecraft/util/math/Vec3i;");
                Label label3 = new Label();
                methodVisitor.visitLabel(label3);
                methodVisitor.visitLineNumber(13, label3);
                methodVisitor.visitVarInsn(ALOAD, 0);
                methodVisitor.visitVarInsn(ILOAD, 3);
                methodVisitor.visitFieldInsn(PUTFIELD, "ru/DmN/bpe/rapi/ClassA", "removeTask", "Z");
                Label label4 = new Label();
                methodVisitor.visitLabel(label4);
                methodVisitor.visitLineNumber(14, label4);
                methodVisitor.visitInsn(RETURN);
                Label label5 = new Label();
                methodVisitor.visitLabel(label5);
                methodVisitor.visitLocalVariable("this", "Lnet/minecraft/server/world/ChunkTaskPrioritySystem$UnblockingMessage;", null, label0, label5, 0);
                methodVisitor.visitLocalVariable("callback", "Ljava/lang/Runnable;", null, label0, label5, 1);
                methodVisitor.visitLocalVariable("pos", "Lnet/minecraft/util/math/Vec3i;", null, label0, label5, 2);
                methodVisitor.visitLocalVariable("removeTask", "Z", null, label0, label5, 3);
                methodVisitor.visitMaxs(2, 4);
                methodVisitor.visitEnd();
            }
        } else if (targetClassName.equals("net.minecraft.server.world.ThreadedAnvilChunkStorage")) {
            Utils.removeField(node, "currentChunkHolders");
            Utils.removeField(node, "chunkHolders");
            Utils.removeField(node, "unloadedChunks");
            Utils.removeField(node, "chunkToNextSaveTimeMs");

            {
                var methodVisitor = Utils.replaceMethod(node, "<init>", "(Lnet/minecraft/server/world/ServerWorld;Lnet/minecraft/world/level/storage/LevelStorage$Session;Lcom/mojang/datafixers/DataFixer;Lnet/minecraft/structure/StructureTemplateManager;Ljava/util/concurrent/Executor;Lnet/minecraft/util/thread/ThreadExecutor;Lnet/minecraft/world/chunk/ChunkProvider;Lnet/minecraft/world/gen/chunk/ChunkGenerator;Lnet/minecraft/server/WorldGenerationProgressListener;Lnet/minecraft/world/chunk/ChunkStatusChangeListener;Ljava/util/function/Supplier;IZ)V");
                methodVisitor.visitParameter("world", 0);
                methodVisitor.visitParameter("session", 0);
                methodVisitor.visitParameter("dataFixer", 0);
                methodVisitor.visitParameter("structureTemplateManager", 0);
                methodVisitor.visitParameter("executor", 0);
                methodVisitor.visitParameter("mainThreadExecutor", 0);
                methodVisitor.visitParameter("chunkProvider", 0);
                methodVisitor.visitParameter("chunkGenerator", 0);
                methodVisitor.visitParameter("worldGenerationProgressListener", 0);
                methodVisitor.visitParameter("chunkStatusChangeListener", 0);
                methodVisitor.visitParameter("persistentStateManagerFactory", 0);
                methodVisitor.visitParameter("viewDistance", 0);
                methodVisitor.visitParameter("dsync", 0);
                methodVisitor.visitCode();
                Label label0 = new Label();
                methodVisitor.visitLabel(label0);
                methodVisitor.visitLineNumber(152, label0);
                methodVisitor.visitVarInsn(ALOAD, 0);
                methodVisitor.visitVarInsn(ALOAD, 2);
                methodVisitor.visitVarInsn(ALOAD, 1);
                methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/server/world/ServerWorld", "getRegistryKey", "()Lnet/minecraft/util/registry/RegistryKey;", false);
                methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/level/storage/LevelStorage$Session", "getWorldDirectory", "(Lnet/minecraft/util/registry/RegistryKey;)Ljava/nio/file/Path;", false);
                methodVisitor.visitLdcInsn("region");
                methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/nio/file/Path", "resolve", "(Ljava/lang/String;)Ljava/nio/file/Path;", true);
                methodVisitor.visitVarInsn(ALOAD, 3);
                methodVisitor.visitVarInsn(ILOAD, 13);
                methodVisitor.visitMethodInsn(INVOKESPECIAL, "net/minecraft/world/storage/VersionedChunkStorage", "<init>", "(Ljava/nio/file/Path;Lcom/mojang/datafixers/DataFixer;Z)V", false);
                Label label1 = new Label();
                methodVisitor.visitLabel(label1);
                methodVisitor.visitLineNumber(153, label1);
                methodVisitor.visitVarInsn(ALOAD, 0);
                methodVisitor.visitTypeInsn(NEW, "java/util/HashMap");
                methodVisitor.visitInsn(DUP);
                methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/util/HashMap", "<init>", "()V", false);
                methodVisitor.visitFieldInsn(PUTFIELD, "net/minecraft/server/world/ThreadedAnvilChunkStorage", "currentChunkHolders", "Ljava/util/HashMap;");
                Label label2 = new Label();
                methodVisitor.visitLabel(label2);
                methodVisitor.visitLineNumber(153, label2);
                methodVisitor.visitVarInsn(ALOAD, 0);
                methodVisitor.visitVarInsn(ALOAD, 0);
                methodVisitor.visitFieldInsn(GETFIELD, "net/minecraft/server/world/ThreadedAnvilChunkStorage", "currentChunkHolders", "Ljava/util/HashMap;");
                methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "java/util/HashMap", "clone", "()Ljava/lang/Object;", false);
                methodVisitor.visitFieldInsn(PUTFIELD, "net/minecraft/server/world/ThreadedAnvilChunkStorage", "chunkHolders", "Ljava/util/Map;");
                Label label3 = new Label();
                methodVisitor.visitLabel(label3);
                methodVisitor.visitLineNumber(154, label3);
                methodVisitor.visitVarInsn(ALOAD, 0);
                methodVisitor.visitTypeInsn(NEW, "java/util/HashMap");
                methodVisitor.visitInsn(DUP);
                methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/util/HashMap", "<init>", "()V", false);
                methodVisitor.visitFieldInsn(PUTFIELD, "net/minecraft/server/world/ThreadedAnvilChunkStorage", "chunksToUnload", "Ljava/util/Map;");
                Label label4 = new Label();
                methodVisitor.visitLabel(label4);
                methodVisitor.visitLineNumber(155, label4);
                methodVisitor.visitVarInsn(ALOAD, 0);
                methodVisitor.visitTypeInsn(NEW, "it/unimi/dsi/fastutil/longs/LongOpenHashSet");
                methodVisitor.visitInsn(DUP);
                methodVisitor.visitMethodInsn(INVOKESPECIAL, "it/unimi/dsi/fastutil/longs/LongOpenHashSet", "<init>", "()V", false);
                methodVisitor.visitFieldInsn(PUTFIELD, "net/minecraft/server/world/ThreadedAnvilChunkStorage", "loadedChunks", "Lit/unimi/dsi/fastutil/longs/LongSet;");
                Label label5 = new Label();
                methodVisitor.visitLabel(label5);
                methodVisitor.visitLineNumber(156, label5);
                methodVisitor.visitVarInsn(ALOAD, 0);
                methodVisitor.visitTypeInsn(NEW, "java/util/HashSet");
                methodVisitor.visitInsn(DUP);
                methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/util/HashSet", "<init>", "()V", false);
                methodVisitor.visitFieldInsn(PUTFIELD, "net/minecraft/server/world/ThreadedAnvilChunkStorage", "unloadedChunks", "Ljava/util/Set;");
                Label label6 = new Label();
                methodVisitor.visitLabel(label6);
                methodVisitor.visitLineNumber(157, label6);
                methodVisitor.visitVarInsn(ALOAD, 0);
                methodVisitor.visitTypeInsn(NEW, "java/util/concurrent/atomic/AtomicInteger");
                methodVisitor.visitInsn(DUP);
                methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/util/concurrent/atomic/AtomicInteger", "<init>", "()V", false);
                methodVisitor.visitFieldInsn(PUTFIELD, "net/minecraft/server/world/ThreadedAnvilChunkStorage", "totalChunksLoadedCount", "Ljava/util/concurrent/atomic/AtomicInteger;");
                Label label7 = new Label();
                methodVisitor.visitLabel(label7);
                methodVisitor.visitLineNumber(158, label7);
                methodVisitor.visitVarInsn(ALOAD, 0);
                methodVisitor.visitTypeInsn(NEW, "net/minecraft/server/world/PlayerChunkWatchingManager");
                methodVisitor.visitInsn(DUP);
                methodVisitor.visitMethodInsn(INVOKESPECIAL, "net/minecraft/server/world/PlayerChunkWatchingManager", "<init>", "()V", false);
                methodVisitor.visitFieldInsn(PUTFIELD, "net/minecraft/server/world/ThreadedAnvilChunkStorage", "playerChunkWatchingManager", "Lnet/minecraft/server/world/PlayerChunkWatchingManager;");
                Label label8 = new Label();
                methodVisitor.visitLabel(label8);
                methodVisitor.visitLineNumber(159, label8);
                methodVisitor.visitVarInsn(ALOAD, 0);
                methodVisitor.visitTypeInsn(NEW, "it/unimi/dsi/fastutil/ints/Int2ObjectOpenHashMap");
                methodVisitor.visitInsn(DUP);
                methodVisitor.visitMethodInsn(INVOKESPECIAL, "it/unimi/dsi/fastutil/ints/Int2ObjectOpenHashMap", "<init>", "()V", false);
                methodVisitor.visitFieldInsn(PUTFIELD, "net/minecraft/server/world/ThreadedAnvilChunkStorage", "entityTrackers", "Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;");
                Label label9 = new Label();
                methodVisitor.visitLabel(label9);
                methodVisitor.visitLineNumber(160, label9);
                methodVisitor.visitVarInsn(ALOAD, 0);
                methodVisitor.visitTypeInsn(NEW, "it/unimi/dsi/fastutil/longs/Long2ByteOpenHashMap");
                methodVisitor.visitInsn(DUP);
                methodVisitor.visitMethodInsn(INVOKESPECIAL, "it/unimi/dsi/fastutil/longs/Long2ByteOpenHashMap", "<init>", "()V", false);
                methodVisitor.visitFieldInsn(PUTFIELD, "net/minecraft/server/world/ThreadedAnvilChunkStorage", "chunkToType", "Lit/unimi/dsi/fastutil/longs/Long2ByteMap;");
                Label label10 = new Label();
                methodVisitor.visitLabel(label10);
                methodVisitor.visitLineNumber(161, label10);
                methodVisitor.visitVarInsn(ALOAD, 0);
                methodVisitor.visitTypeInsn(NEW, "java/util/HashMap");
                methodVisitor.visitInsn(DUP);
                methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/util/HashMap", "<init>", "()V", false);
                methodVisitor.visitFieldInsn(PUTFIELD, "net/minecraft/server/world/ThreadedAnvilChunkStorage", "chunkToNextSaveTimeMs", "Ljava/util/Map;");
                Label label11 = new Label();
                methodVisitor.visitLabel(label11);
                methodVisitor.visitLineNumber(162, label11);
                methodVisitor.visitVarInsn(ALOAD, 0);
                methodVisitor.visitMethodInsn(INVOKESTATIC, "com/google/common/collect/Queues", "newConcurrentLinkedQueue", "()Ljava/util/concurrent/ConcurrentLinkedQueue;", false);
                methodVisitor.visitFieldInsn(PUTFIELD, "net/minecraft/server/world/ThreadedAnvilChunkStorage", "unloadTaskQueue", "Ljava/util/Queue;");
                Label label12 = new Label();
                methodVisitor.visitLabel(label12);
                methodVisitor.visitLineNumber(163, label12);
                methodVisitor.visitVarInsn(ALOAD, 0);
                methodVisitor.visitVarInsn(ALOAD, 4);
                methodVisitor.visitFieldInsn(PUTFIELD, "net/minecraft/server/world/ThreadedAnvilChunkStorage", "structureTemplateManager", "Lnet/minecraft/structure/StructureTemplateManager;");
                Label label13 = new Label();
                methodVisitor.visitLabel(label13);
                methodVisitor.visitLineNumber(164, label13);
                methodVisitor.visitVarInsn(ALOAD, 2);
                methodVisitor.visitVarInsn(ALOAD, 1);
                methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/server/world/ServerWorld", "getRegistryKey", "()Lnet/minecraft/util/registry/RegistryKey;", false);
                methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/level/storage/LevelStorage$Session", "getWorldDirectory", "(Lnet/minecraft/util/registry/RegistryKey;)Ljava/nio/file/Path;", false);
                methodVisitor.visitVarInsn(ASTORE, 14);
                Label label14 = new Label();
                methodVisitor.visitLabel(label14);
                methodVisitor.visitLineNumber(165, label14);
                methodVisitor.visitVarInsn(ALOAD, 0);
                methodVisitor.visitVarInsn(ALOAD, 14);
                methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/nio/file/Path", "getFileName", "()Ljava/nio/file/Path;", true);
                methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/nio/file/Path", "toString", "()Ljava/lang/String;", true);
                methodVisitor.visitFieldInsn(PUTFIELD, "net/minecraft/server/world/ThreadedAnvilChunkStorage", "saveDir", "Ljava/lang/String;");
                Label label15 = new Label();
                methodVisitor.visitLabel(label15);
                methodVisitor.visitLineNumber(166, label15);
                methodVisitor.visitVarInsn(ALOAD, 0);
                methodVisitor.visitVarInsn(ALOAD, 1);
                methodVisitor.visitFieldInsn(PUTFIELD, "net/minecraft/server/world/ThreadedAnvilChunkStorage", "world", "Lnet/minecraft/server/world/ServerWorld;");
                Label label16 = new Label();
                methodVisitor.visitLabel(label16);
                methodVisitor.visitLineNumber(167, label16);
                methodVisitor.visitVarInsn(ALOAD, 0);
                methodVisitor.visitVarInsn(ALOAD, 8);
                methodVisitor.visitFieldInsn(PUTFIELD, "net/minecraft/server/world/ThreadedAnvilChunkStorage", "chunkGenerator", "Lnet/minecraft/world/gen/chunk/ChunkGenerator;");
                Label label17 = new Label();
                methodVisitor.visitLabel(label17);
                methodVisitor.visitLineNumber(168, label17);
                methodVisitor.visitVarInsn(ALOAD, 8);
                methodVisitor.visitTypeInsn(INSTANCEOF, "net/minecraft/world/gen/chunk/NoiseChunkGenerator");
                Label label18 = new Label();
                methodVisitor.visitJumpInsn(IFEQ, label18);
                methodVisitor.visitVarInsn(ALOAD, 8);
                methodVisitor.visitTypeInsn(CHECKCAST, "net/minecraft/world/gen/chunk/NoiseChunkGenerator");
                methodVisitor.visitVarInsn(ASTORE, 15);
                Label label19 = new Label();
                methodVisitor.visitLabel(label19);
                methodVisitor.visitLineNumber(169, label19);
                methodVisitor.visitVarInsn(ALOAD, 0);
                methodVisitor.visitVarInsn(ALOAD, 15);
                methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/gen/chunk/NoiseChunkGenerator", "getSettings", "()Lnet/minecraft/util/registry/RegistryEntry;", false);
                methodVisitor.visitMethodInsn(INVOKEINTERFACE, "net/minecraft/util/registry/RegistryEntry", "value", "()Ljava/lang/Object;", true);
                methodVisitor.visitTypeInsn(CHECKCAST, "net/minecraft/world/gen/chunk/ChunkGeneratorSettings");
                methodVisitor.visitVarInsn(ALOAD, 1);
                methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/server/world/ServerWorld", "getRegistryManager", "()Lnet/minecraft/util/registry/DynamicRegistryManager;", false);
                methodVisitor.visitFieldInsn(GETSTATIC, "net/minecraft/util/registry/Registry", "NOISE_KEY", "Lnet/minecraft/util/registry/RegistryKey;");
                methodVisitor.visitMethodInsn(INVOKEINTERFACE, "net/minecraft/util/registry/DynamicRegistryManager", "get", "(Lnet/minecraft/util/registry/RegistryKey;)Lnet/minecraft/util/registry/Registry;", true);
                methodVisitor.visitVarInsn(ALOAD, 1);
                methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/server/world/ServerWorld", "getSeed", "()J", false);
                methodVisitor.visitMethodInsn(INVOKESTATIC, "net/minecraft/world/gen/noise/NoiseConfig", "create", "(Lnet/minecraft/world/gen/chunk/ChunkGeneratorSettings;Lnet/minecraft/util/registry/Registry;J)Lnet/minecraft/world/gen/noise/NoiseConfig;", false);
                methodVisitor.visitFieldInsn(PUTFIELD, "net/minecraft/server/world/ThreadedAnvilChunkStorage", "noiseConfig", "Lnet/minecraft/world/gen/noise/NoiseConfig;");
                Label label20 = new Label();
                methodVisitor.visitJumpInsn(GOTO, label20);
                methodVisitor.visitLabel(label18);
                methodVisitor.visitLineNumber(171, label18);
                methodVisitor.visitFrame(Opcodes.F_NEW, 15, new Object[] {"net/minecraft/server/world/ThreadedAnvilChunkStorage", "net/minecraft/server/world/ServerWorld", Opcodes.TOP, "com/mojang/datafixers/DataFixer", Opcodes.TOP, "java/util/concurrent/Executor", "net/minecraft/util/thread/ThreadExecutor", "net/minecraft/world/chunk/ChunkProvider", Opcodes.TOP, "net/minecraft/server/WorldGenerationProgressListener", "net/minecraft/world/chunk/ChunkStatusChangeListener", "java/util/function/Supplier", Opcodes.INTEGER, Opcodes.INTEGER, "java/nio/file/Path"}, 0, new Object[] {});
                methodVisitor.visitVarInsn(ALOAD, 0);
                methodVisitor.visitMethodInsn(INVOKESTATIC, "net/minecraft/world/gen/chunk/ChunkGeneratorSettings", "createMissingSettings", "()Lnet/minecraft/world/gen/chunk/ChunkGeneratorSettings;", false);
                methodVisitor.visitVarInsn(ALOAD, 1);
                methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/server/world/ServerWorld", "getRegistryManager", "()Lnet/minecraft/util/registry/DynamicRegistryManager;", false);
                methodVisitor.visitFieldInsn(GETSTATIC, "net/minecraft/util/registry/Registry", "NOISE_KEY", "Lnet/minecraft/util/registry/RegistryKey;");
                methodVisitor.visitMethodInsn(INVOKEINTERFACE, "net/minecraft/util/registry/DynamicRegistryManager", "get", "(Lnet/minecraft/util/registry/RegistryKey;)Lnet/minecraft/util/registry/Registry;", true);
                methodVisitor.visitVarInsn(ALOAD, 1);
                methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/server/world/ServerWorld", "getSeed", "()J", false);
                methodVisitor.visitMethodInsn(INVOKESTATIC, "net/minecraft/world/gen/noise/NoiseConfig", "create", "(Lnet/minecraft/world/gen/chunk/ChunkGeneratorSettings;Lnet/minecraft/util/registry/Registry;J)Lnet/minecraft/world/gen/noise/NoiseConfig;", false);
                methodVisitor.visitFieldInsn(PUTFIELD, "net/minecraft/server/world/ThreadedAnvilChunkStorage", "noiseConfig", "Lnet/minecraft/world/gen/noise/NoiseConfig;");
                methodVisitor.visitLabel(label20);
                methodVisitor.visitLineNumber(174, label20);
                methodVisitor.visitFrame(Opcodes.F_NEW, 15, new Object[] {"net/minecraft/server/world/ThreadedAnvilChunkStorage", "net/minecraft/server/world/ServerWorld", Opcodes.TOP, "com/mojang/datafixers/DataFixer", Opcodes.TOP, "java/util/concurrent/Executor", "net/minecraft/util/thread/ThreadExecutor", "net/minecraft/world/chunk/ChunkProvider", Opcodes.TOP, "net/minecraft/server/WorldGenerationProgressListener", "net/minecraft/world/chunk/ChunkStatusChangeListener", "java/util/function/Supplier", Opcodes.INTEGER, Opcodes.INTEGER, "java/nio/file/Path"}, 0, new Object[] {});
                methodVisitor.visitVarInsn(ALOAD, 0);
                methodVisitor.visitVarInsn(ALOAD, 6);
                methodVisitor.visitFieldInsn(PUTFIELD, "net/minecraft/server/world/ThreadedAnvilChunkStorage", "mainThreadExecutor", "Lnet/minecraft/util/thread/ThreadExecutor;");
                Label label21 = new Label();
                methodVisitor.visitLabel(label21);
                methodVisitor.visitLineNumber(175, label21);
                methodVisitor.visitVarInsn(ALOAD, 5);
                methodVisitor.visitLdcInsn("worldgen");
                methodVisitor.visitMethodInsn(INVOKESTATIC, "net/minecraft/util/thread/TaskExecutor", "create", "(Ljava/util/concurrent/Executor;Ljava/lang/String;)Lnet/minecraft/util/thread/TaskExecutor;", false);
                methodVisitor.visitVarInsn(ASTORE, 15);
                Label label22 = new Label();
                methodVisitor.visitLabel(label22);
                methodVisitor.visitLineNumber(177, label22);
                methodVisitor.visitLdcInsn("main");
                methodVisitor.visitVarInsn(ALOAD, 6);
                methodVisitor.visitInsn(DUP);
                methodVisitor.visitMethodInsn(INVOKESTATIC, "java/util/Objects", "requireNonNull", "(Ljava/lang/Object;)Ljava/lang/Object;", false);
                methodVisitor.visitInsn(POP);
                methodVisitor.visitInvokeDynamicInsn("accept", "(Lnet/minecraft/util/thread/ThreadExecutor;)Ljava/util/function/Consumer;", new Handle(Opcodes.H_INVOKESTATIC, "java/lang/invoke/LambdaMetafactory", "metafactory", "(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;", false), new Object[]{Type.getType("(Ljava/lang/Object;)V"), new Handle(Opcodes.H_INVOKEVIRTUAL, "net/minecraft/util/thread/ThreadExecutor", "send", "(Ljava/lang/Runnable;)V", false), Type.getType("(Ljava/lang/Runnable;)V")});
                methodVisitor.visitMethodInsn(INVOKESTATIC, "net/minecraft/util/thread/MessageListener", "create", "(Ljava/lang/String;Ljava/util/function/Consumer;)Lnet/minecraft/util/thread/MessageListener;", true);
                methodVisitor.visitVarInsn(ASTORE, 16);
                Label label23 = new Label();
                methodVisitor.visitLabel(label23);
                methodVisitor.visitLineNumber(178, label23);
                methodVisitor.visitVarInsn(ALOAD, 0);
                methodVisitor.visitVarInsn(ALOAD, 9);
                methodVisitor.visitFieldInsn(PUTFIELD, "net/minecraft/server/world/ThreadedAnvilChunkStorage", "worldGenerationProgressListener", "Lnet/minecraft/server/WorldGenerationProgressListener;");
                Label label24 = new Label();
                methodVisitor.visitLabel(label24);
                methodVisitor.visitLineNumber(179, label24);
                methodVisitor.visitVarInsn(ALOAD, 0);
                methodVisitor.visitVarInsn(ALOAD, 10);
                methodVisitor.visitFieldInsn(PUTFIELD, "net/minecraft/server/world/ThreadedAnvilChunkStorage", "chunkStatusChangeListener", "Lnet/minecraft/world/chunk/ChunkStatusChangeListener;");
                Label label25 = new Label();
                methodVisitor.visitLabel(label25);
                methodVisitor.visitLineNumber(180, label25);
                methodVisitor.visitVarInsn(ALOAD, 5);
                methodVisitor.visitLdcInsn("light");
                methodVisitor.visitMethodInsn(INVOKESTATIC, "net/minecraft/util/thread/TaskExecutor", "create", "(Ljava/util/concurrent/Executor;Ljava/lang/String;)Lnet/minecraft/util/thread/TaskExecutor;", false);
                methodVisitor.visitVarInsn(ASTORE, 17);
                Label label26 = new Label();
                methodVisitor.visitLabel(label26);
                methodVisitor.visitLineNumber(181, label26);
                methodVisitor.visitVarInsn(ALOAD, 0);
                methodVisitor.visitTypeInsn(NEW, "net/minecraft/server/world/ChunkTaskPrioritySystem");
                methodVisitor.visitInsn(DUP);
                methodVisitor.visitVarInsn(ALOAD, 15);
                methodVisitor.visitVarInsn(ALOAD, 16);
                methodVisitor.visitVarInsn(ALOAD, 17);
                methodVisitor.visitMethodInsn(INVOKESTATIC, "com/google/common/collect/ImmutableList", "of", "(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lcom/google/common/collect/ImmutableList;", false);
                methodVisitor.visitVarInsn(ALOAD, 5);
                methodVisitor.visitLdcInsn(new Integer(2147483647));
                methodVisitor.visitMethodInsn(INVOKESPECIAL, "net/minecraft/server/world/ChunkTaskPrioritySystem", "<init>", "(Ljava/util/List;Ljava/util/concurrent/Executor;I)V", false);
                methodVisitor.visitFieldInsn(PUTFIELD, "net/minecraft/server/world/ThreadedAnvilChunkStorage", "chunkTaskPrioritySystem", "Lnet/minecraft/server/world/ChunkTaskPrioritySystem;");
                Label label27 = new Label();
                methodVisitor.visitLabel(label27);
                methodVisitor.visitLineNumber(182, label27);
                methodVisitor.visitVarInsn(ALOAD, 0);
                methodVisitor.visitVarInsn(ALOAD, 0);
                methodVisitor.visitFieldInsn(GETFIELD, "net/minecraft/server/world/ThreadedAnvilChunkStorage", "chunkTaskPrioritySystem", "Lnet/minecraft/server/world/ChunkTaskPrioritySystem;");
                methodVisitor.visitVarInsn(ALOAD, 15);
                methodVisitor.visitInsn(ICONST_0);
                methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/server/world/ChunkTaskPrioritySystem", "createExecutor", "(Lnet/minecraft/util/thread/MessageListener;Z)Lnet/minecraft/util/thread/MessageListener;", false);
                methodVisitor.visitFieldInsn(PUTFIELD, "net/minecraft/server/world/ThreadedAnvilChunkStorage", "worldGenExecutor", "Lnet/minecraft/util/thread/MessageListener;");
                Label label28 = new Label();
                methodVisitor.visitLabel(label28);
                methodVisitor.visitLineNumber(183, label28);
                methodVisitor.visitVarInsn(ALOAD, 0);
                methodVisitor.visitVarInsn(ALOAD, 0);
                methodVisitor.visitFieldInsn(GETFIELD, "net/minecraft/server/world/ThreadedAnvilChunkStorage", "chunkTaskPrioritySystem", "Lnet/minecraft/server/world/ChunkTaskPrioritySystem;");
                methodVisitor.visitVarInsn(ALOAD, 16);
                methodVisitor.visitInsn(ICONST_0);
                methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/server/world/ChunkTaskPrioritySystem", "createExecutor", "(Lnet/minecraft/util/thread/MessageListener;Z)Lnet/minecraft/util/thread/MessageListener;", false);
                methodVisitor.visitFieldInsn(PUTFIELD, "net/minecraft/server/world/ThreadedAnvilChunkStorage", "mainExecutor", "Lnet/minecraft/util/thread/MessageListener;");
                Label label29 = new Label();
                methodVisitor.visitLabel(label29);
                methodVisitor.visitLineNumber(184, label29);
                methodVisitor.visitVarInsn(ALOAD, 0);
                methodVisitor.visitTypeInsn(NEW, "net/minecraft/server/world/ServerLightingProvider");
                methodVisitor.visitInsn(DUP);
                methodVisitor.visitVarInsn(ALOAD, 7);
                methodVisitor.visitVarInsn(ALOAD, 0);
                methodVisitor.visitVarInsn(ALOAD, 0);
                methodVisitor.visitFieldInsn(GETFIELD, "net/minecraft/server/world/ThreadedAnvilChunkStorage", "world", "Lnet/minecraft/server/world/ServerWorld;");
                methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/server/world/ServerWorld", "getDimension", "()Lnet/minecraft/world/dimension/DimensionType;", false);
                methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/world/dimension/DimensionType", "hasSkyLight", "()Z", false);
                methodVisitor.visitVarInsn(ALOAD, 17);
                methodVisitor.visitVarInsn(ALOAD, 0);
                methodVisitor.visitFieldInsn(GETFIELD, "net/minecraft/server/world/ThreadedAnvilChunkStorage", "chunkTaskPrioritySystem", "Lnet/minecraft/server/world/ChunkTaskPrioritySystem;");
                methodVisitor.visitVarInsn(ALOAD, 17);
                methodVisitor.visitInsn(ICONST_0);
                methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/server/world/ChunkTaskPrioritySystem", "createExecutor", "(Lnet/minecraft/util/thread/MessageListener;Z)Lnet/minecraft/util/thread/MessageListener;", false);
                methodVisitor.visitMethodInsn(INVOKESPECIAL, "net/minecraft/server/world/ServerLightingProvider", "<init>", "(Lnet/minecraft/world/chunk/ChunkProvider;Lnet/minecraft/server/world/ThreadedAnvilChunkStorage;ZLnet/minecraft/util/thread/TaskExecutor;Lnet/minecraft/util/thread/MessageListener;)V", false);
                methodVisitor.visitFieldInsn(PUTFIELD, "net/minecraft/server/world/ThreadedAnvilChunkStorage", "lightingProvider", "Lnet/minecraft/server/world/ServerLightingProvider;");
                Label label30 = new Label();
                methodVisitor.visitLabel(label30);
                methodVisitor.visitLineNumber(185, label30);
                methodVisitor.visitVarInsn(ALOAD, 0);
                methodVisitor.visitTypeInsn(NEW, "net/minecraft/server/world/ThreadedAnvilChunkStorage$TicketManager");
                methodVisitor.visitInsn(DUP);
                methodVisitor.visitVarInsn(ALOAD, 0);
                methodVisitor.visitVarInsn(ALOAD, 5);
                methodVisitor.visitVarInsn(ALOAD, 6);
                methodVisitor.visitMethodInsn(INVOKESPECIAL, "net/minecraft/server/world/ThreadedAnvilChunkStorage$TicketManager", "<init>", "(Lnet/minecraft/server/world/ThreadedAnvilChunkStorage;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)V", false);
                methodVisitor.visitFieldInsn(PUTFIELD, "net/minecraft/server/world/ThreadedAnvilChunkStorage", "ticketManager", "Lnet/minecraft/server/world/ThreadedAnvilChunkStorage$TicketManager;");
                Label label31 = new Label();
                methodVisitor.visitLabel(label31);
                methodVisitor.visitLineNumber(186, label31);
                methodVisitor.visitVarInsn(ALOAD, 0);
                methodVisitor.visitVarInsn(ALOAD, 11);
                methodVisitor.visitFieldInsn(PUTFIELD, "net/minecraft/server/world/ThreadedAnvilChunkStorage", "persistentStateManagerFactory", "Ljava/util/function/Supplier;");
                Label label32 = new Label();
                methodVisitor.visitLabel(label32);
                methodVisitor.visitLineNumber(187, label32);
                methodVisitor.visitVarInsn(ALOAD, 0);
                methodVisitor.visitTypeInsn(NEW, "net/minecraft/world/poi/PointOfInterestStorage");
                methodVisitor.visitInsn(DUP);
                methodVisitor.visitVarInsn(ALOAD, 14);
                methodVisitor.visitLdcInsn("poi");
                methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/nio/file/Path", "resolve", "(Ljava/lang/String;)Ljava/nio/file/Path;", true);
                methodVisitor.visitVarInsn(ALOAD, 3);
                methodVisitor.visitVarInsn(ILOAD, 13);
                methodVisitor.visitVarInsn(ALOAD, 1);
                methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/server/world/ServerWorld", "getRegistryManager", "()Lnet/minecraft/util/registry/DynamicRegistryManager;", false);
                methodVisitor.visitVarInsn(ALOAD, 1);
                methodVisitor.visitMethodInsn(INVOKESPECIAL, "net/minecraft/world/poi/PointOfInterestStorage", "<init>", "(Ljava/nio/file/Path;Lcom/mojang/datafixers/DataFixer;ZLnet/minecraft/util/registry/DynamicRegistryManager;Lnet/minecraft/world/HeightLimitView;)V", false);
                methodVisitor.visitFieldInsn(PUTFIELD, "net/minecraft/server/world/ThreadedAnvilChunkStorage", "pointOfInterestStorage", "Lnet/minecraft/world/poi/PointOfInterestStorage;");
                Label label33 = new Label();
                methodVisitor.visitLabel(label33);
                methodVisitor.visitLineNumber(188, label33);
                methodVisitor.visitVarInsn(ALOAD, 0);
                methodVisitor.visitVarInsn(ILOAD, 12);
                methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "net/minecraft/server/world/ThreadedAnvilChunkStorage", "setViewDistance", "(I)V", false);
                Label label34 = new Label();
                methodVisitor.visitLabel(label34);
                methodVisitor.visitLineNumber(189, label34);
                methodVisitor.visitInsn(RETURN);
                Label label35 = new Label();
                methodVisitor.visitLabel(label35);
                methodVisitor.visitLocalVariable("this", "Lnet/minecraft/server/world/ThreadedAnvilChunkStorage;", null, label0, label35, 0);
                methodVisitor.visitLocalVariable("world", "Lnet/minecraft/server/world/ServerWorld;", null, label0, label35, 1);
                methodVisitor.visitLocalVariable("session", "Lnet/minecraft/world/level/storage/LevelStorage$Session;", null, label0, label35, 2);
                methodVisitor.visitLocalVariable("dataFixer", "Lcom/mojang/datafixers/DataFixer;", null, label0, label35, 3);
                methodVisitor.visitLocalVariable("structureTemplateManager", "Lnet/minecraft/structure/StructureTemplateManager;", null, label0, label35, 4);
                methodVisitor.visitLocalVariable("executor", "Ljava/util/concurrent/Executor;", null, label0, label35, 5);
                methodVisitor.visitLocalVariable("mainThreadExecutor", "Lnet/minecraft/util/thread/ThreadExecutor;", "Lnet/minecraft/util/thread/ThreadExecutor<Ljava/lang/Runnable;>;", label0, label35, 6);
                methodVisitor.visitLocalVariable("chunkProvider", "Lnet/minecraft/world/chunk/ChunkProvider;", null, label0, label35, 7);
                methodVisitor.visitLocalVariable("chunkGenerator", "Lnet/minecraft/world/gen/chunk/ChunkGenerator;", null, label0, label35, 8);
                methodVisitor.visitLocalVariable("worldGenerationProgressListener", "Lnet/minecraft/server/WorldGenerationProgressListener;", null, label0, label35, 9);
                methodVisitor.visitLocalVariable("chunkStatusChangeListener", "Lnet/minecraft/world/chunk/ChunkStatusChangeListener;", null, label0, label35, 10);
                methodVisitor.visitLocalVariable("persistentStateManagerFactory", "Ljava/util/function/Supplier;", "Ljava/util/function/Supplier<Lnet/minecraft/world/PersistentStateManager;>;", label0, label35, 11);
                methodVisitor.visitLocalVariable("viewDistance", "I", null, label0, label35, 12);
                methodVisitor.visitLocalVariable("dsync", "Z", null, label0, label35, 13);
                methodVisitor.visitLocalVariable("path", "Ljava/nio/file/Path;", null, label14, label35, 14);
                methodVisitor.visitLocalVariable("noiseChunkGenerator", "Lnet/minecraft/world/gen/chunk/NoiseChunkGenerator;", null, label19, label18, 15);
                methodVisitor.visitLocalVariable("taskExecutor", "Lnet/minecraft/util/thread/TaskExecutor;", "Lnet/minecraft/util/thread/TaskExecutor<Ljava/lang/Runnable;>;", label22, label35, 15);
                methodVisitor.visitLocalVariable("messageListener", "Lnet/minecraft/util/thread/MessageListener;", "Lnet/minecraft/util/thread/MessageListener<Ljava/lang/Runnable;>;", label23, label35, 16);
                methodVisitor.visitLocalVariable("taskExecutor2", "Lnet/minecraft/util/thread/TaskExecutor;", "Lnet/minecraft/util/thread/TaskExecutor<Ljava/lang/Runnable;>;", label26, label35, 17);
                methodVisitor.visitMaxs(10, 18);
                methodVisitor.visitEnd();
            }
        } else if (targetClassName.equals("net.minecraft.world.SimulationDistanceLevelPropagator")) {
            Utils.removeField(node, "levels");
            Utils.removeField(node, "tickets");

            {
                var methodVisitor = Utils.replaceMethod(node, "<init>", "()V");
                methodVisitor.visitCode();
                Label label0 = new Label();
                methodVisitor.visitLabel(label0);
                methodVisitor.visitLineNumber(23, label0);
                methodVisitor.visitVarInsn(ALOAD, 0);
                methodVisitor.visitIntInsn(BIPUSH, 34);
                methodVisitor.visitIntInsn(BIPUSH, 16);
                methodVisitor.visitIntInsn(SIPUSH, 256);
                methodVisitor.visitMethodInsn(INVOKESPECIAL, "net/minecraft/world/ChunkPosDistanceLevelPropagator", "<init>", "(III)V", false);
                Label label1 = new Label();
                methodVisitor.visitLabel(label1);
                methodVisitor.visitLineNumber(23, label1);
                methodVisitor.visitVarInsn(ALOAD, 0);
                methodVisitor.visitTypeInsn(NEW, "ru/DmN/bpe/rapi/DefaultHashMap");
                methodVisitor.visitInsn(DUP);
                methodVisitor.visitMethodInsn(INVOKESPECIAL, "ru/DmN/bpe/rapi/DefaultHashMap", "<init>", "()V", false);
                methodVisitor.visitFieldInsn(PUTFIELD, "net/minecraft/world/SimulationDistanceLevelPropagator", "levels", "Lru/DmN/bpe/rapi/DefaultHashMap;");
                Label label2 = new Label();
                methodVisitor.visitLabel(label2);
                methodVisitor.visitLineNumber(23, label2);
                methodVisitor.visitVarInsn(ALOAD, 0);
                methodVisitor.visitTypeInsn(NEW, "java/util/HashMap");
                methodVisitor.visitInsn(DUP);
                methodVisitor.visitMethodInsn(INVOKESPECIAL, "java/util/HashMap", "<init>", "()V", false);
                methodVisitor.visitFieldInsn(PUTFIELD, "net/minecraft/world/SimulationDistanceLevelPropagator", "tickets", "Ljava/util/Map;");
                Label label3 = new Label();
                methodVisitor.visitLabel(label3);
                methodVisitor.visitLineNumber(24, label3);
                methodVisitor.visitVarInsn(ALOAD, 0);
                methodVisitor.visitFieldInsn(GETFIELD, "net/minecraft/world/SimulationDistanceLevelPropagator", "levels", "Lru/DmN/bpe/rapi/DefaultHashMap;");
                methodVisitor.visitIntInsn(BIPUSH, 33);
                methodVisitor.visitMethodInsn(INVOKEVIRTUAL, "ru/DmN/bpe/rapi/DefaultHashMap", "defaultReturnValue", "(I)V", false);
                Label label4 = new Label();
                methodVisitor.visitLabel(label4);
                methodVisitor.visitLineNumber(25, label4);
                methodVisitor.visitInsn(RETURN);
                Label label5 = new Label();
                methodVisitor.visitLabel(label5);
                methodVisitor.visitLocalVariable("this", "Lnet/minecraft/world/SimulationDistanceLevelPropagator;", null, label0, label5, 0);
                methodVisitor.visitMaxs(4, 1);
                methodVisitor.visitEnd();
            }
        } else if (mixinClassName.equals("ru.DmN.bpe.mixin.TicketManagerMixin")) {
            {
                var methodVisitor = node.visitMethod(ACC_PUBLIC, "isUnloaded", "(Lnet/minecraft/util/math/Vec3i;)Z", null, null);
                methodVisitor.visitCode();
                Label label0 = new Label();
                methodVisitor.visitLabel(label0);
                methodVisitor.visitLineNumber(18, label0);
                methodVisitor.visitVarInsn(ALOAD, 0);
                methodVisitor.visitFieldInsn(GETFIELD, "net/minecraft/server/world/ThreadedAnvilChunkStorage$TicketManager", "field_17443", "Lnet/minecraft/server/world/ThreadedAnvilChunkStorage;");
                methodVisitor.visitFieldInsn(GETFIELD, "net/minecraft/server/world/ThreadedAnvilChunkStorage", "unloadedChunks", "Ljava/util/Set;");
                methodVisitor.visitVarInsn(ALOAD, 1);
                methodVisitor.visitMethodInsn(INVOKEINTERFACE, "java/util/Set", "contains", "(Ljava/lang/Object;)Z", true);
                methodVisitor.visitInsn(IRETURN);
                Label label1 = new Label();
                methodVisitor.visitLabel(label1);
                methodVisitor.visitLocalVariable("this", "Lnet/minecraft/server/world/ThreadedAnvilChunkStorage$TicketManager;", null, label0, label1, 0);
                methodVisitor.visitLocalVariable("pos", "Lnet/minecraft/util/math/Vec3i;", null, label0, label1, 1);
                methodVisitor.visitMaxs(2, 2);
                methodVisitor.visitEnd();
            }
        }
    }
}
